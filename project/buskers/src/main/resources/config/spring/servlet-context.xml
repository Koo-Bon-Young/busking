<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<context:component-scan base-package="kr.co.buskers" />
	
	<!-- 스프링을 이용한 파일 업로드 처리시 필수 클래스 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="10000000" />
	</bean>
	
	<mvc:annotation-driven>
		<mvc:message-converters>
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>text/plain; charset=UTF-8</value>
						<value>text/html; charset=UTF-8</value>
					</list>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	
	<mvc:default-servlet-handler />
	
	<mvc:view-resolvers>
		<mvc:jsp prefix="/WEB-INF/view/" suffix=".jsp" />
	</mvc:view-resolvers>
	
	<context:property-placeholder location="classpath:config/mybatis/db.properties"/>
	
	<bean id="dataSource"
        class="org.springframework.jdbc.datasource.DriverManagerDataSource"
        lazy-init="false"
        p:driverClassName="${jdbc.mysql.driver}"
		p:url="${jdbc.mysql.url}"
		p:username="${jdbc.mysql.username}"
		p:password="${jdbc.mysql.password}" />
        
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <property name="typeAliasesPackage" value="kr.co.buskers.repository.domain"/>
        <property name="configLocation" value="classpath:config/mybatis/sqlMapConfig.xml"></property>
        <property name="mapperLocations" value="classpath:config/sqlmap/*.xml"></property>
    </bean>
    
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" destroy-method="clearCache">
    	<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
    </bean>
    
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="kr.co.buskers.repository.mapper" />
    </bean>
    
    <!-- 트랜젝션 관리 -->
    
    <!-- 트랜젝션 처리를 annotation 방식으로 처리 -->
    <!-- xml 방식이 더 효율적이다!  -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    	<property name="dataSource" ref="dataSource" />
    </bean>
    
    <!-- 트랜젝션 관리 -->
    <!-- 
     -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
    	<tx:attributes>
    		<!-- rollback-for : default-> sqlException but we expand Exception range -->
    <!-- 
     -->
    		<tx:method name="insert*" rollback-for="Exception"/>
    		<tx:method name="update*" rollback-for="Exception"/>
    		<tx:method name="delete*" rollback-for="Exception"/>
    	</tx:attributes>
    </tx:advice>
    <!-- 트랜젝션을 위한 AOP 설정
     -->
    <aop:config>
    	<aop:pointcut id="pCut" expression="execution(public * kr.co.buskers..service.*Impl.*(..))" />
    	<aop:advisor advice-ref="txAdvice" pointcut-ref="pCut"/>
    </aop:config>
     

	<!-- 로그인상태 session 처리용 인터셉터 설정 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/main/board/agency/checkform.do"/>
<!--  			<mvc:mapping path="/main/**"/> -->
<!-- 			<mvc:exclude-mapping path="/main/member/**"/> -->
			<bean class="kr.co.buskers.main.member.util.LoginInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>
	
    <!-- tiles 설정 -->
    <beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
        <beans:property name="definitions">
            <beans:list>
                <beans:value>/WEB-INF/tiles/tiles.xml</beans:value>
            </beans:list>
        </beans:property>
    </beans:bean>        
    <beans:bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
        <beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" />
        <beans:property name="order" value="1" />
    </beans:bean>   
     
	<mvc:annotation-driven >
	<!-- Ajax 한글 -->
		<mvc:message-converters>
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>test/plain; charset=UTF-8</value>
						<value>text/html; charset=UTF-8</value>
					</list>
				</property>
			</bean>		
		</mvc:message-converters>
	</mvc:annotation-driven>
    
	
</beans>