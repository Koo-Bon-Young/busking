<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.buskers.repository.mapper.FreeBoardMapper">
	
	<select id="selectBoard" parameterType="freePage" resultType="freeBoard">
		select *
  		  from (select @rownum:=@rownum+1 rnum, a.*
		          from ( select f.*, count(c.board_no) as comment_count, nick_name
		                   from tb_freeboard f
                           left join tb_freeboard_comment c on f.board_no = c.board_no
		                  inner join tb_member m on m.member_no = f.member_no
						  where (@rownum:=0)=0
						  
						<choose>
							<when test="searchType == 'title'">
								and title like concat('%', #{input}, '%')
							</when>
							<when test="searchType == 'content'">
								and f.content like concat('%', #{input}, '%')
							</when>
							<when test="searchType == 'nickName'">
								and nick_name like concat('%', #{input}, '%')
							</when>
							<otherwise>
							</otherwise>
						</choose>
						
						group by board_no
						
						<choose>
							<when test="sortType == 'viewDESC'">
								order by view_cnt desc
							</when>
							<when test="sortType == 'viewASC'">
								order by view_cnt asc
							</when>
							<when test="sortType == 'likeDESC'">
								order by like_cnt desc
							</when>
							<when test="sortType == 'likeASC'">
								order by like_cnt asc
							</when>
							<when test="sortType == 'dateDESC'">
								order by reg_date desc
							</when>
							<when test="sortType == 'dateASC'">
								order by reg_date asc
							</when>
							<otherwise>
								order by board_no desc
							</otherwise>
						</choose>
						
	                   ) a
		       ) b
		 where rnum between #{begin} and #{end}
	</select>
	
	<select id="selectNoticeBoard" resultType="freeBoard">
		select f.*, count(c.board_no) as comment_count, nick_name
		  from tb_freeboard f
		  left join tb_freeboard_comment c on f.board_no = c.board_no
		 inner join tb_member m on m.member_no = f.member_no
		 where is_notify = 'Y'
         group by board_no
	</select>
	
	<select id="selectBoardByNo" parameterType="int" resultType="freeBoard">
		select * 
		  from tb_freeboard f, tb_member m
		 where f.member_no = m.member_no
		   and board_no = #{boardNo}
	</select>

	<select id="selectBoardCount" parameterType="freePage" resultType="int">
		select count(*)
		  from tb_freeboard f, tb_member m
		 where f.member_no = m.member_no
		<choose>
			<when test="searchType == 'title'">
				and title like concat('%', #{input}, '%')
			</when>
			<when test="searchType == 'content'">
				and content like concat('%', #{input}, '%')
			</when>
			<when test="searchType == 'nickName'">
				and nick_name like concat('%', #{input}, '%')
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<update id="updateBoardViewCount" parameterType="int">
		update tb_freeboard
		  set view_cnt = view_cnt + 1
		where board_no = #{boardNo}
	</update>
	
	<insert id="insertBoard" parameterType="freeBoard">
		insert into tb_freeboard(
			member_no, content, title
		)values(
			#{memberNo}, #{content}, #{title}
		)
	</insert>
	
	<select id="selectCommentList" parameterType="int" resultType="freeBoardComment">
		select *
		  from tb_freeboard_comment c, tb_member m
		 where c.member_no = m.member_no
		   and c.board_no = #{boardNo}
	</select>
	
	<insert id="insertComment" parameterType="freeBoardComment">
		insert into tb_freeboard_comment(
			member_no, content, board_no
		)values(
			#{memberNo}, #{content}, #{boardNo}
		)
	</insert>
	
	<select id="selectBoardIsLike" parameterType="like" resultType="like">
		select *
		  from tb_like
		 where board_no = #{boardNo}
		   and member_no = #{memberNo}
	</select>
	
</mapper>








