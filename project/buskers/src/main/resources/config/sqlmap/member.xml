<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.buskers.repository.mapper.MemberMapper">
	
	<!-- 일반 회원 가입 -->
	<insert id="signupMember" parameterType="member">
		insert into tb_member (
			id, pass, email, sex, nick_name
		) values (
			#{id}, #{pass}, #{email}, #{sex}, #{nickName}
		)
	</insert>
	<!-- 카카오 회원가입 -->
	<insert id="signupSocialMember" parameterType="member">
		insert into tb_member (
			id,member_type,nick_name
		) values (
			#{id},#{memberType},#{nickName}
		);
	</insert>
	
	<!-- 소셜가입 닉네임 -->
	<update id="updateNickNameSocialMember" parameterType="member">
		update tb_member
		   set nick_name = #{nickName}
		 where id = #{id}
	</update>
	
	<!-- 버스커 등록 -->
	<insert id="signupBusker" parameterType="busker">
		<selectKey keyProperty="buskerNo" resultType="int" order="BEFORE">
   			 SELECT MAX(busker_no)+1 FROM tb_busker
  		</selectKey>
		insert into tb_busker (
			busker_no, member_no, activity_name, phone
		) values (
			#{buskerNo}, #{memberNo}, #{activityName}, #{phone}
		)
	</insert>
	
	<!-- 버스커 장르 등록 -->
	<insert id="insertBuskerGenre" parameterType="buskerGenre">
		insert into tb_busker_genre (
			genre_no, busker_no
		) values
        <foreach collection="buskerCheckbox" item="genre" separator=" , ">
            (#{genre}, #{buskerNo})
        </foreach>
	</insert>

	
	<!-- 맴버 타입변경(버스커) -->
	<update id="changeBuskerType" parameterType="member">
		update tb_member
		   set is_busker = #{isBusker}
		 where member_no = #{memberNo}
	</update>
	
	<!-- 로그인 -->
	<select id="loginAction"  resultType="member">
			select a.*,b.busker_no
  		  from tb_member as a
     left outer join tb_busker as b
            on a.member_no=b.member_no
         where id = #{id}
	</select>
	
	<!-- 아이디 중복체크 -->
   <select id="checkId" parameterType="member" resultType="int">
      select count(*)
        from tb_member
       where id = #{id}
   </select>
	
	<!-- 이메일 중복체크 -->
	<select id="checkEmail" parameterType="member" resultType="int">
		select count(*)
		  from tb_member
		 where email = #{email}
	</select>
	
	<!-- 닉네임 중복체크 -->
	<select id="checkNickName" parameterType="member" resultType="int">
		select count(*)
		  from tb_member
		 where nick_name = #{nickName}
	</select>
	
	
	<!-- 아이디 찾기 -->
	<select id="findId"  resultType="member">
		select id
		  from tb_member
		 where email = #{email}
	</select>
	
	<!-- 비밀번호 찾기 -->
	<select id="findPass" resultType="member">
		select pass
		  from tb_member
		 where id = #{id} 
		   and email = #{email}
	</select>
	
	<!-- 비밀번호 변경 -->
	<update id="newPass" parameterType="member">
		update tb_member
		   set pass = #{pass}
		 where id = #{id}
		   and email = #{email}
	</update>
	
	<!-- 프로필 이미지 변경 -->
	<update id="uploadProfile" parameterType="member" >
		update tb_member
  		   set profile_img = #{profileImg},
               profile_img_path = #{profileImgPath}
         where member_no = #{memberNo}
	</update>
	
	<!-- 돈충전 -->
	<update id="chargeMoney" parameterType="member">
		update tb_member
  		   set sum = sum + #{sum}
 		 where member_no = #{memberNo}
	</update>
	
	<!-- 개인정보 변경 -->
	<update id="memberUpdate" parameterType="member" useGeneratedKeys="true" keyProperty="memberNo">
		update tb_member
  		   set email = #{email},
               nick_name = #{nickName},
               pass = #{pass}
         where member_no = #{memberNo}
	</update>
	
	<!-- 유저 뽑기 -->
	<select id="selectUser" parameterType="int" resultType="member">
		select *
		  from tb_member
		 where member_no = #{memberNo}
	</select>
	
	<insert id="insertFollow" parameterType="follow">
		insert into tb_follow(
			busker_no,member_no
		)values(
		 #{buskerNo},#{memberNo}
		 );
	</insert>
	
	<select id="confirmFollow" parameterType="follow" resultType="int">
		select count(*)
		  from tb_follow
		 where busker_no = #{buskerNo}
		   and member_no = #{memberNo}
	</select>
	
	<select id="followStatus" parameterType="follow" resultType="String">
		select follow_status
		  from tb_follow
		 where busker_no = #{buskerNo}
		   and member_no = #{memberNo}
	</select>
	
	<update id="followCancle" parameterType="follow">
		update tb_follow
		   set follow_status='n'
		 where busker_no = #{buskerNo}
		   and member_no = #{memberNo}
	</update>
	
	<update id="follow" parameterType="follow">
		update tb_follow
		   set follow_status='y'
		 where busker_no = #{buskerNo}
		   and member_no = #{memberNo}
	</update>
	
	<update id="updateIntro" parameterType="busker">
		update tb_busker
	  	   set intro=#{intro},
	           location=#{location},
	           time=#{time}
    	 where busker_no = #{buskerNo}
	</update>
	
	<select id="selectBusker" parameterType="int" resultType="busker">
		select a.*,b.*
      	  from tb_busker as a
	      inner join tb_member as b
	         on a.member_no = b.member_no
          where busker_no=#{buskerNo}
	</select>
	
</mapper>