<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.buskers.repository.mapper.QnaBoardMapper">
	<!-- 게시글 등록 -->
	<insert id="insertBoard" parameterType="qnaBoard" useGeneratedKeys="true" keyProperty="boardNo">
		insert into tb_qnaboard(
			member_no,content,title
		) values (
			#{memberNo}, #{content}, #{title}
		)
	</insert>
	
	<!-- 전체글 조회 -->
	<select id="selectBoard" parameterType="qnaBoard" resultType="qnaBoard">
		select *
  		  from (select @rownum:=@rownum+1 rnum, a.*
		          from ( select *
		                   from tb_qnaboard
						  WHERE (@rownum:=0)=0
						  
						<choose>
							<when test="searchType == 'title'">
								and title like concat('%', #{input}, '%')
							</when>
							<when test="searchType == 'content'">
								and content like concat('%', #{input}, '%')
							</when>
							<when test="searchType == 'writer'">
								and writer like concat('%', #{input}, '%')
							</when>
							<otherwise>
							</otherwise>
						</choose>
						
						<choose>
							<when test="sortType == 'viewDESC'">
								order by view_cnt desc
							</when>
							<when test="sortType == 'viewASC'">
								order by view_cnt asc
							</when>
							<when test="sortType == 'likeDESC'">
								order by like_cnt desc
							</when>
							<when test="sortType == 'likeASC'">
								order by like_cnt asc
							</when>
							<when test="sortType == 'dateDESC'">
								order by reg_date desc
							</when>
							<when test="sortType == 'dateASC'">
								order by reg_date asc
							</when>
							<otherwise>
								order by board_no desc
							</otherwise>
						</choose>
						
	                   ) a
		       ) b
		 where rnum between #{begin} and #{end}
	</select>
	
	<!-- 페이지 이용 필요 카운트 -->
	<select id="selectBoardCount" parameterType="freePage" resultType="int">
		select count(*)
		  from tb_qnaboard
		<choose>
			<when test="searchType == 'title'">
				where title like concat('%', #{input}, '%')
			</when>
			<when test="searchType == 'content'">
				where content like concat('%', #{input} , '%')
			</when>
			<when test="searchType == 'writer'">
				where writer like concat('%', #{input}, '%')
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<!-- 게시글조회 -->
	<select id="selectBoardByNo" parameterType="int" resultType="qnaBoard">
	  	select *
		 from tb_qnaboard as a
		inner join tb_like as b
		   on a.board_no=b.board_no
		inner join tb_member as c
		   on a.member_no=c.member_no
		where a.board_no=#{boardNo}
	 </select>	
	
	<!-- 조회수 증가 --> 
	 <update id="updateViewCnt" parameterType="int">
		update tb_qnaboard
		   set view_cnt = view_cnt + 1
		 where board_no = #{boardNo}  
	</update>
	
	<!-- 게시글 삭제 -->
	 <delete id="deleteBoard" parameterType="int">
    	update tb_qnaboard
    	   set is_delete = 'y'
    	 where board_no = #{boardNo}
    </delete>   
    
<!--  게시글 수정  -->
     <update id="updateBoard" parameterType="qnaBoard">
    	update tb_qnaboard
    	   set title = #{title},
    	       content = #{content}
    	 where board_no = #{boardNo}
    </update>	 
    <!-- 좋아요 테이블 값 생성 -->
    <insert id="insertLike" parameterType="like">
		insert into tb_like(
			member_no,board_no,board_type
		) values (
			#{memberNo}, #{boardNo},3
		)
	</insert>
	<!-- 현재 like테이블 상태를 알기-->
	  <select id="selectLike" parameterType="like" resultType="like">
    	select *
    	  from tb_like
    	 where board_no = #{boardNo}
    	   and member_no = #{memberNo}
    	   and board_type=#{boardType}
    </select>
    
	<!-- 현재 like테이블  상태 업데이트-->
    <update id="updateLike" parameterType="like" >
    	update tb_like
    	   set like_status = #{likeStatus}
    	 where board_no = #{boardNo}
    	   and member_no = #{memberNo}
    	   and board_type = #{boardType}
    </update>	 
    <!-- 좋아요값 + - -->
      <update id="updateLikeQnaBoardPlus" parameterType="qnaBoard">
      		
    	update tb_qnaboard
		   set like_cnt = like_cnt + 1
		 where board_no = #{boardNo}  
		 <selectKey keyProperty="likeCnt" resultType="int" order="AFTER">
    			select like_cnt from tb_qnaboard where board_no=#{boardNo}
   		</selectKey>
    </update>
    	 
    <update id="updateLikeQnaBoardMinus"  parameterType="qnaBoard" >
    	update tb_qnaboard
		   set like_cnt = like_cnt - 1
		 where board_no = #{boardNo}  
		 <selectKey keyProperty="likeCnt" resultType="int" order="AFTER">
    			select like_cnt from tb_qnaboard where board_no=#{boardNo}
   		</selectKey>
    </update>	 
    <!-- 라이크테이블 삭제 -->
    <delete id="deleteLike" parameterType="int">
    	delete 
    	  from tb_like
    	 where board_no = #{no}
    </delete>    
    
<!--     코멘트 불러오기 -->
    <select id="selectComment" parameterType="int" resultType="qnaBoardComment">
		select *
		  from tb_qnaboard_comment as a
		 inner join tb_member as b
		    on a.member_no=b.member_no
		 where board_no = #{boardNo}
		   and reply_no = 0
		 order by comment_no 
    </select>  
    <!-- 대댓글 불러오기 -->
    <select id="selectCommentReply" parameterType="int" resultType="qnaBoardComment">
    	select *
  		  from tb_qnaboard_comment as a
		 inner join tb_member as b
		 where a.member_no = b.member_no
		   and board_no = #{boardNo} 
   		   and reply_no not in (0)
    </select>
    <!-- 코멘트 추가 -->
	<insert id="insertComment" parameterType="qnaBoardComment">
		insert into tb_qnaboard_comment(board_no, member_no, content)
		values(#{boardNo},#{memberNo},#{content})
	</insert>
	
		    
    
</mapper>

